from aiogram import types
from main import dp
from modules.dispatcher import constant
from aiogram.dispatcher.filters import Text

from modules.dispatcher import bot, UserLikes, UserCouples
from modules.handlers.users_handlers.find_couples import show_other_profile
from modules.keyboards import user_likes_kb, likes_kb, likes_in_profile_kb
from modules.sql_func import update_db, read_by_name, search_person, join_profile_all, read_all_2, \
    insert_likes_presents_db
from modules.handlers.handlers_func import edit_text_call
from modules.functions.simple_funcs import update_age_period


# Profile menu
@dp.message_handler(commands=['like'], state='*')
@dp.message_handler(Text(equals='üíñ –°–∏–º–ø–∞—Ç–∏–∏', ignore_case=True), state='*')
async def start_menu(message: types.Message):
    all_likes = read_by_name(name='id', id_data=message.from_user.id, table='likes')
    all_send_presents = read_by_name(name='id', id_data=message.from_user.id, table='presents')
    all_receive_presents = read_by_name(name='id', id_name="from_tg_id", id_data=message.from_user.id, table='presents')

    await message.answer(f'üíñ –°–∏–º–ø–∞—Ç–∏–∏\n\n'
                         f'–í–∞—Å –ª–∞–π–∫–Ω—É–ª–∏ <b>{len(all_likes)}</b> —Ä–∞–∑(-–∞)\n'
                         f'–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ <b>{len(all_receive_presents)}</b> —Ä–∞–∑(-–∞)\n'
                         f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ <b>{len(all_send_presents)}</b> —Ä–∞–∑(-–∞)\n', parse_mode='html',
                         reply_markup=user_likes_kb())
    await UserLikes.start.set()


# Profile menu
@dp.callback_query_handler(state=UserLikes.presents_from_me, text='back')
@dp.callback_query_handler(state=UserLikes.presents_for_me, text='back')
@dp.callback_query_handler(state=UserLikes.likes_for_me, text='back')
@dp.callback_query_handler(state=UserLikes.start, text='back')
async def start_menu(call: types.CallbackQuery):
    all_likes = read_by_name(name='id', id_data=call.from_user.id, table='likes')
    all_send_presents = read_by_name(name='id', id_data=call.from_user.id, table='presents')
    all_receive_presents = read_by_name(name='id', id_name="from_tg_id", id_data=call.from_user.id, table='presents')

    await edit_text_call(call=call, text=f'üíñ –°–∏–º–ø–∞—Ç–∏–∏\n\n'
                                         f'–í–∞—Å –ª–∞–π–∫–Ω—É–ª–∏ <b>{len(all_likes)}</b> —Ä–∞–∑(-–∞)\n'
                                         f'–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ <b>{len(all_receive_presents)}</b> —Ä–∞–∑(-–∞)\n'
                                         f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ <b>{len(all_send_presents)}</b> —Ä–∞–∑(-–∞)\n',
                         k_board=user_likes_kb())
    await UserLikes.start.set()


@dp.callback_query_handler(state=UserLikes.start, text='user_likes')
async def start_menu(call: types.CallbackQuery):
    all_likes = read_by_name(name='from_tg_id', id_data=call.from_user.id, table='likes')
    update_db(table='fast_info', name='fast_1', data=str(all_likes), id_data=call.from_user.id)
    if str(all_likes) == '[]':
        return await call.message.answer('–£–≤—ã, –Ω–æ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –≤–∑–∞–∏–º–Ω—ã—Ö —Å–∏–º–ø–∞—Ç–∏–π, —Å—Ç–∞–≤—å—Ç–µ –ª–∞–π–∫–∏ –¥—Ä—É–≥–∏–º '
                                         '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –≤—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ—Ç–µ –≤–∑–∞–∏–º–Ω—É—é —Å–∏–º–ø–∞—Ç–∏—é üòá')

    await edit_text_call(text='üëç –í–∞—Å –ª–∞–π–∫–Ω—É–ª–∏', call=call, k_board=likes_kb(all_likes))
    await UserLikes.likes_for_me.set()


@dp.callback_query_handler(state=UserLikes.start, text='user_presents_send')
async def start_menu(call: types.CallbackQuery):
    all_likes = read_by_name(name='tg_id', id_name="from_tg_id", id_data=call.from_user.id, table='presents')
    update_db(table='fast_info', name='fast_1', data=str(all_likes), id_data=call.from_user.id)
    if str(all_likes) == '[]':
        return await call.message.answer('–í—ã –µ—â–µ –Ω–∏–∫–æ–º—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ üéÅ –ø–æ–¥–∞—Ä–∫–∏.')

    await edit_text_call(text='üéÅ –ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏–ª', call=call, k_board=likes_kb(all_likes))
    await UserLikes.presents_from_me.set()


@dp.callback_query_handler(state=UserLikes.start, text='user_presents_from')
async def start_menu(call: types.CallbackQuery):
    all_likes = read_by_name(name='from_tg_id', id_name="tg_id", id_data=call.from_user.id, table='presents')
    update_db(table='fast_info', name='fast_1', data=str(all_likes), id_data=call.from_user.id)
    if str(all_likes) == '[]':
        return await call.message.answer('üòî –£–≤—ã, –Ω–æ –≤—ã –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ üéÅ –ø–æ–¥–∞—Ä–∫–∞')

    await edit_text_call(text='üéÅ –û—Ç –∫–æ–≥–æ –ø–æ–ª—É—á–∏–ª', call=call, k_board=likes_kb(all_likes))
    await UserLikes.presents_for_me.set()


@dp.callback_query_handler(state=UserLikes.likes_for_me, text_contains='like_kb_')
async def start_menu(call: types.CallbackQuery):
    user_id = call.data.split('_')[2]
    text, photo_id = show_other_profile(user_id=int(user_id), user_finder_id=call.from_user.id)
    await call.message.delete()
    text = f'üëç –í–∞—Å –ª–∞–π–∫–Ω—É–ª–∏ <b>[1/2]</b>\n\n{text}'
    await bot.send_photo(caption=text, photo=photo_id, chat_id=call.from_user.id, parse_mode='html',
                         reply_markup=likes_in_profile_kb())
    await UserLikes.likes_for_me.set()


@dp.callback_query_handler(state=UserLikes.presents_from_me, text_contains='like_kb_')
async def start_menu(call: types.CallbackQuery):
    user_id = call.data.split('_')[2]
    text, photo_id = show_other_profile(user_id=int(user_id), user_finder_id=call.from_user.id)
    await call.message.delete()
    text = f'üéÅ –ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏–ª <b>[1/2]</b>\n\n{text}'
    await bot.send_photo(caption=text, photo=photo_id, chat_id=call.from_user.id, parse_mode='html',
                         reply_markup=likes_in_profile_kb())
    await UserLikes.presents_from_me.set()


@dp.callback_query_handler(state=UserLikes.presents_for_me, text_contains='like_kb_')
async def start_menu(call: types.CallbackQuery):
    user_id = call.data.split('_')[2]
    text, photo_id = show_other_profile(user_id=int(user_id), user_finder_id=call.from_user.id)
    await call.message.delete()
    text = f'üéÅ –û—Ç –∫–æ–≥–æ –ø–æ–ª—É—á–∏–ª <b>[1/2]</b>\n\n{text}'
    await bot.send_photo(caption=text, photo=photo_id, chat_id=call.from_user.id, parse_mode='html',
                         reply_markup=likes_in_profile_kb())
    await UserLikes.presents_for_me.set()
