from aiogram import types

from modules import dp, update_db
from modules.dispatcher import AdminAutoSender, Admin
from modules.handlers.handlers_func import edit_text_call
from modules.keyboards import smart_sender, smart_sender_post_type, without_media
from modules.sql_func import read_by_name


@dp.callback_query_handler(state=AdminAutoSender.new_post, text='back')
@dp.callback_query_handler(state=Admin.start, text='auto_sender')
async def start_menu(call: types.CallbackQuery):
    await edit_text_call(call=call, text='üìù‚öôÔ∏è –ê–≤—Ç–æ —Ä–∞—Å—Å—ã–ª–∫–∞', k_board=smart_sender())
    await AdminAutoSender.start.set()


@dp.callback_query_handler(state=AdminAutoSender.start, text='new_post')
async def start_menu(call: types.CallbackQuery):
    await edit_text_call(call=call, k_board=smart_sender_post_type(),
                         text=f'üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç ‚úàÔ∏è\n'
                              f'–ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–ø—É—Å—Ç—è n –¥–Ω–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∏–±–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç\n'
                              f'<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞.</b>\n')
    await AdminAutoSender.new_post.set()


@dp.callback_query_handler(state=AdminAutoSender.new_post, text='new_post_first_reg')
@dp.callback_query_handler(state=AdminAutoSender.new_post, text='new_post_lust_active')
async def start_menu(call: types.CallbackQuery):
    if call.data == 'new_post_first_reg':
        info = 'first_reg'
    else:
        info = 'lust_active'
    update_db(table="fast_info", name="fast_1", data=info, id_data=call.from_user.id)
    await edit_text_call(call=call,
                         text=f'üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç ‚úàÔ∏è\n'
                              f'–ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–ø—É—Å—Ç—è n –¥–Ω–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∏–±–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç\n'
                              f'<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n')
    await AdminAutoSender.new_post_data.set()


@dp.message_handler(state=AdminAutoSender.new_post_data)
async def start_menu(message: types.Message):
    if message.text.isdigit():
        if 0 < int(message.text) <= 60:
            update_db(table="fast_info", name="fast_2", data=message.text, id_data=message.from_user.id)
            await message.answer(f'üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç ‚úàÔ∏è\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞')
            await AdminAutoSender.new_post_text.set()
        else:
            await message.answer('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 60')
    else:
        await message.answer('–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!')


@dp.message_handler(state=AdminAutoSender.new_post_text)
async def start_menu(message: types.Message):
    update_db(table="fast_info", name="fast_3", data=message.text, id_data=message.from_user.id)
    await message.answer(f'üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç ‚úàÔ∏è\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n'
                         f'<b>–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏</b>\n'
                         f'url', parse_mode='html', reply_markup=without_media())
    await AdminAutoSender.new_post_url.set()


@dp.message_handler(state=AdminAutoSender.new_post_url)
async def start_menu(message: types.Message):
    if '\n' in message.text:
        post_data = read_by_name(table='fast_info', name='fast_1, fast_2, fast_3', id_data=message.from_user.id)
        await message.answer(f'–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!')
        await AdminAutoSender.new_post_url.set()
    else:
        await message.answer('–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')


@dp.callback_query_handler(state=AdminAutoSender.new_post_url, text='no_data')
async def start_menu(call: types.CallbackQuery):
    post_data = read_by_name(table='fast_info', name='fast_1, fast_2, fast_3', id_data=call.from_user.id)
    await call.message.answer(reply_markup=smart_sender_post_type(),
                              text=f'–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!')
    await AdminAutoSender.new_post_url.set()
